name: CI/CD with Terraform
on:
  merge:
    branches:
      - main

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_STATE_BUCKET_NAME: ${{ secrets.TF_STATE_BUCKET_NAME }}
  PRIVATE_SSH_KEY: ${{ secrets.PRIVATE_SSH_KEY }}
  PUBLIC_SSH_KEY: ${{ secrets.PUBLIC_SSH_KEY }}
  AWS_REGION: us-east-1

# jobs:
#   deploy-infrastructure:
#     runs-on: unbuntu-latest
#     outputs:
#       SERVER_PUBLIC_IP: ${{ steps.set-ip.outputs.instance_public_ip}}
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
#       - name: Setup Terraform
#         uses: hasicorp/setup-terraform@v1
#         with: 
#           terraform_wrapper: false
#       - name: Terraform init
#         id: init
#         run: terraform init -backend-config="bucket=$TF_STATE_BUCKET_NAME" -backend-config="region=us-east-1"
#         working-directory: ./terraform
#       - name: Terraform plan
#         id: plan
#         run: |-
#           terraform plan \
#           -var="region=$AWS_REGION" \
#           -var="public_key=$PUBLIC_SSH_KEY" \
#           -var="private_key=$PRIVATE_SSH_KEY" \
#           -var="key_name=deployer-key" \
#           -out=PLAN
#         working-directory: ./terraform
#       - name: Terraform apply
#         id: apply
#         run: terraform apply PLAN
#         working-directory: ./terraform
#       - name: Set output
#         id: set-ip
#         run: |-
#           echo "::set-output name=instance_public_ip::$(terraform output instance_public_ip)"
#   deploy-app:
#     runs-on: ubuntu-latest
#     needs: deploy-infrastructure
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
#       - name: Set IP env variable
#         run: echo SERVER_PUBLIC_IP=${{ needs.deploy-infrastructure.outputs.SERVER_PUBLIC_IP }} >> $GITHUB_ENV
#       - name: Login to AWS ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1
#       - name: Build, push docker image
#         env:
#           REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           REPOSITORY: example-node-app
#           IMAGE_TAG: ${{ github.sha }}
#           AWS_DEFAULT_REGION: us-east-1
#         run: |-
#           docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
#           docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG 
#       - name: Deploy docker image to EC2
#         uses: appleboy/ssh-action@master
#         with:
#           hosts:
#           username:
#           key:
#           envs:
#           script: |-
        
#         // continue with 
#         // Complete CI/CD with Terraform and AWS | Terraform Tutorial | DevOps Project | AWS | Cloud-Native
#         // 41:28